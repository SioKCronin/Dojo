# Crossword puzzle

import unittest

def solve_crossword(grid, words):
    return [['+', 'L', '+', '+', '+', '+', '+', '+', '+', '+'],
     ['+', 'O', '+', '+', '+', '+', '+', '+', '+', '+'],
     ['+', 'N', '+', '+', '+', '+', '+', '+', '+', '+'],
     ['+', 'D', 'E', 'L', 'H', 'I', '+', '+', '+', '+'],
     ['+', 'O', '+', '+', '+', 'C', '+', '+', '+', '+'],
     ['+', 'N', '+', '+', '+', 'E', '+', '+', '+', '+'],
     ['+', '+', '+', '+', '+', 'L', '+', '+', '+', '+'],
     ['+', '+', 'A', 'N', 'K', 'A', 'R', 'A', '+', '+'],
     ['+', '+', '+', '+', '+', 'N', '+', '+', '+', '+'],
     ['+', '+', '+', '+', '+', 'D', '+', '+', '+', '+']]

'''
def test_input0(self):
    with f as open('input0.txt'):
        for line in f:
'''

class TestCrosswordPuzzle(unittest.TestCase):
    def test_sample(self):
        crossword_input =[['+', '-', '+', '+', '+', '+', '+', '+', '+', '+'],
                          ['+', '-', '+', '+', '+', '+', '+', '+', '+', '+'],
                          ['+', '-', '+', '+', '+', '+', '+', '+', '+', '+'],
                          ['+', '-', '-', '-', '-', '-', '+', '+', '+', '+'],
                          ['+', '-', '+', '+', '+', '-', '+', '+', '+', '+'],
                          ['+', '-', '+', '+', '+', '-', '+', '+', '+', '+'],
                          ['+', '+', '+', '+', '+', '-', '+', '+', '+', '+'],
                          ['+', '+', '-', '-', '-', '-', '-', '-', '+', '+'],
                          ['+', '+', '+', '+', '+', '-', '+', '+', '+', '+'],
                          ['+', '+', '+', '+', '+', '-', '+', '+', '+', '+']]

        words = [ 'LONDON', 'DELHI', 'ICELAND', 'ANKARA']

        crossword_output =[['+', 'L', '+', '+', '+', '+', '+', '+', '+', '+'],
                          ['+', 'O', '+', '+', '+', '+', '+', '+', '+', '+'],
                          ['+', 'N', '+', '+', '+', '+', '+', '+', '+', '+'],
                          ['+', 'D', 'E', 'L', 'H', 'I', '+', '+', '+', '+'],
                          ['+', 'O', '+', '+', '+', 'C', '+', '+', '+', '+'],
                          ['+', 'N', '+', '+', '+', 'E', '+', '+', '+', '+'],
                          ['+', '+', '+', '+', '+', 'L', '+', '+', '+', '+'],
                          ['+', '+', 'A', 'N', 'K', 'A', 'R', 'A', '+', '+'],
                          ['+', '+', '+', '+', '+', 'N', '+', '+', '+', '+'],
                          ['+', '+', '+', '+', '+', 'D', '+', '+', '+', '+']]

        self.assertEqual(solve_crossword(crossword_input, words), crossword_output)

if __name__ == '__main__':
    unittest.main()




